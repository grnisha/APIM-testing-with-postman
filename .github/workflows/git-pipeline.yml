# This is a basic workflow to help you get started with Actions

name: RunDemoConfAPITests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  dev:
    runs-on: ubuntu-latest
    environment: DEV
    
    steps:
      - uses: actions/checkout@v3
      
      # - name: Test Print
      #   run: echo ${{ secrets.BASEURL }}
      
      - name: npm install newman
        run: npm install newman -g
      - name: npm install htmlextra
        run: npm install -g newman-reporter-htmlextra
              
      - name: string-tokeniser
        uses: scott-david-walker/tokeniser@v1.0.5
        with:
          files: "**/*.json"
          prefix: '##'
          suffix: '##'
          fail-if-no-provided-replacement: true
        env:
          baseUrl: ${{ secrets.BASEURL }}
          apiKey: ${{ secrets.APIKEY }}
          token_endpoint: ${{ secrets.TOKEN_ENDPOINT }} 
          resource: ${{ secrets.RESOURCE }} 
          client_id: ${{ secrets.CLIENT_ID }} 
          client_secret: ${{ secrets.CLIENT_SECRET }}

      - name: Run Tests
        id: run_tests
        run: newman run postmancollection/DemoConfApi.json -x -r junit --reporter-junit-export JUnitReport.xml  

      - name: Test Results
        run: echo $(cat JUnitReport.xml)
        
      - name: Test Report
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Run Tests           # Name of the check run which will be created
          path: JUnitReport.xml    # Path to test results  

      # - name: Replace Tokens
      #   uses: cschleiden/replace-tokens@v1
      #   with:
      #     tokenPrefix: '##'
      #     tokenSuffix: '##'
      #     files: '["**/*.json"]'
      #   env:
      #     baseUrl: ${{ secrets.BASEURL }}
      #     apiKey: ${{ secrets.APIKEY }}
      #     token_endpoint: ${{ secrets.TOKEN_ENDPOINT }} 
      #     resource: ${{ secrets.RESOURCE }} 
      #     client_id: ${{ secrets.CLIENT_ID }} 
      #     client_secret: ${{ secrets.CLIENT_SECRET }} 
          
      # - name: Get DemoConfApi
      #   id: vars
      #   run: echo ::set-output name=def::$(cat postmancollection/DemoConfApi.json)
      # - name: Print DemoConfApi
      #   run: echo ${{ steps.vars.outputs.def }}

      # - name: Run Tests
      #   uses: matt-ball/newman-action@master
      #   with:
      #     collection: postmancollection/DemoConfApi.json
      #     reporters: '["cli", "junit", "htmlextra"]'
      #     reporter: "{ \"junit\": { \"export\": \"/tmp/newman/JUnitReportt.xml\" }, \"htmlextra\": { \"export\": \"/tmp/newman/JUnitReport.html\" }}"
      #     bail: true

      
