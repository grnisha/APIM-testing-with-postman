# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  dev:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: Dev
    steps:
      - uses: actions/checkout@v3
      - name: Test Print
        run: echo ${{ secrets.BASEURL }}
      - name: Get output
        id: varsq
        run: echo ::set-output name=version::$(cat postmancollection/DemoConfApi.json)
      - name: Test output
        run: echo ${{ steps.varsq.outputs.version }}
        
      - name: Replace Tokens
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '##'
          tokenSuffix: '##'
          files: '["**/*.json"]'
        env:
          baseUrl: ${{ secrets.BASEURL }}
          apiKey: ${{ secrets.APIKEY }}
          token_endpoint: ${{ secrets.TOKEN_ENDPOINT }} 
          resource: ${{ secrets.RESOURCE }} 
          client_id: ${{ secrets.CLIENT_ID }} 
          client_secret: ${{ secrets.CLIENT_SECRET }} 
          
      - name: Get output
        id: vars
        run: echo ::set-output name=version::$(cat postmancollection/DemoConfApi.json)
      - name: Test output
        run: echo ${{ steps.vars.outputs.version }}

      - name: Run Tests
        uses: matt-ball/newman-action@master
        with:
          collection: postmancollection/DemoConfApi.json
          reporters: '["cli", "junit", "htmlextra"]'
          reporter: "{ \"junit\": { \"export\": \"/tmp/newman/JUnitReportt.xml\" }, \"htmlextra\": { \"export\": \"/tmp/newman/JUnitReport.html\" }}"
          bail: true
